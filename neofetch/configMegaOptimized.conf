info2() {
    info_output=$(info $3 $2)
    tput cup $3 0
    printf $info_output
}

print_info() {

    exec < /dev/tty    
    oldstty=$(stty -g)    
    stty raw -echo min 0    
    # on my system, the following line can be replaced by the line below it    
    echo -en "\033[6n" > /dev/tty    
    # tput u7 > /dev/tty    # when TERM=xterm (and relatives)    
    IFS=';' read -r -d R -a pos    
    stty $oldstty    
    # change from one-based to zero based so they work with: tput cup $row $col    
    row=$((${pos[0]:2} - 1))    # strip off the esc-[    
    col=$((${pos[1]} - 1))    
    #echo $row 
    
#    prin "hello"
#    info title > /dev/null &
#    info underline > /dev/null &
#    owoS = $(info "OS" distro)&
#    info "Host" model > /dev/null &
#    info "Kernel" kernel > /dev/null &
#    info "Uptime" uptime > /dev/null &
#    info "Packages" packages > /dev/null &
#    info "Shell" shell > /dev/null &
#    info "Resolution" resolution > /dev/null &
#    info "DE" de > /dev/null &
#    info "WM" wm > /dev/null &
#    info "WM Theme" wm_theme > /dev/null &
#    info "Theme" theme > /dev/null &
#    info "Icons" icons > /dev/null &
#    info "Terminal" term > /dev/null &
#    info "Terminal Font" term_font > /dev/null &
#    info "CPU" cpu > /dev/null &
#    info "GPU" gpu > /dev/null &
#    info "Memory" memory > /dev/null &
#    info "GPU Driver" gpu_driver > /dev/null &
#    info "Disk" disk > /dev/null &
#    info "Battery" battery > /dev/null &
#    info "Font" font > /dev/null &
#    info "Song" song > /dev/null &
#    #[[ "$player" ]] prin "Music Player" "$player" > /dev/null &
#    info "Local IP" local_ip > /dev/null &
#    info "Public IP" public_ip > /dev/null &
#    info "Users" users > /dev/null &
#    info "Locale" locale > /dev/null &
#    wait
#    
#
#    [[ "$distro" ]] && prin "distro" "$distro"         
#    [[ "$kernel_name" ]] && prin "kernel_name" "$kernel_name"            
#    [[ "$os" ]] && prin "os" "$os"         
#    [[ "$distro_shorthand" ]] && prin "distro_shorthand" "$distro_shorthand"         
#    [[ "$lsb_flags" ]] && prin "lsb_flags" "$lsb_flags"         
#    [[ "$os_arch" ]] && prin "os_arch" "$os_arch"         
#    [[ "$model" ]] && prin "model" "$model"         
#    [[ "$user" ]] && prin "user" "$user"         
#    [[ "$title" ]] && prin "title" "$title"         
#    [[ "$length" ]] && prin "length" "$length"         
#    [[ "$kernel" ]] && prin "kernel" "$kernel"         
#    [[ "$uptime" ]] && prin "uptime" "$uptime"         
#    [[ "$manager" ]] && prin "manager" "$manager"         
#    [[ "$managers" ]] && prin "managers" "$managers"         
#    [[ "$packages" ]] && prin "packages" "$packages"         
#    [[ "$shell" ]] && prin "shell" "$shell"         
#    [[ "$de" ]] && prin "de" "$de"         
#    [[ "$wm" ]] && prin "wm" "$wm"         
#    [[ "$wm_theme" ]] && prin "wm_theme" "$wm_theme"         
#    [[ "$detheme" ]] && prin "detheme" "$detheme"         
#    [[ "$cpu" ]] && prin "cpu" "$cpu"         
#    [[ "$speed" ]] && prin "speed" "$speed"         
#    [[ "$gpu" ]] && prin "gpu" "$gpu"         
#    [[ "$memory" ]] && prin "memory" "$memory"         
#    [[ "$player" ]] && prin "player" "$player"         
#    [[ "$song" ]] && prin "song" "$song"         
#    [[ "$artist" ]] && prin "artist" "$artist"         
#    [[ "$album" ]] && prin "album" "$album"         
#    [[ "$title" ]] && prin "title" "$title"         
#    [[ "$resolution" ]] && prin "resolution" "$resolution"         
#    [[ "$theme" ]] && prin "theme" "$theme"         
#    [[ "$icons" ]] && prin "icons" "$icons"         
#    [[ "$font" ]] && prin "font" "$font"         
#    [[ "$term" ]] && prin "term" "$term"         
#    [[ "$term_font" ]] && prin "term_font" "$term_font"         
#    [[ "$disk" ]] && prin "disk" "$disk"         
#    [[ "$battery" ]] && prin "battery" "$battery"         
#    [[ "$local_ip" ]] && prin "local_ip" "$local_ip"         
#    [[ "$public_ip" ]] && prin "public_ip" "$public_ip"         
#    [[ "$users" ]] && prin "users" "$users"         
#    [[ "$locale" ]] && prin "locale" "$locale"         
#    [[ "$gpu_driver" ]] && prin "gpu_driver" "$gpu_driver"         

    info title 
    info underline 


    exec < /dev/tty    
    oldstty=$(stty -g)    
    stty raw -echo min 0    
    # on my system, the following line can be replaced by the line below it    
    echo -en "\033[6n" > /dev/tty    
    # tput u7 > /dev/tty    # when TERM=xterm (and relatives)    
    IFS=';' read -r -d R -a pos    
    stty $oldstty    
    # change from one-based to zero based so they work with: tput cup $row $col    
    row=$((${pos[0]:2} - 1))    # strip off the esc-[    
    col=$((${pos[1]} - 1))    
    #echo $row 



    info2 "OS" distro $row &
 ((row++))
    info2 "Host" model $row &
 ((row++))
    info2 "Kernel" kernel $row &
 ((row++))
    info2 "Uptime" uptime $row &
 ((row++))
    info "Packages" packages 
    info "Shell" shell 
    info "Resolution" resolution 
    info "DE" de 
    info "WM" wm 
    info "WM Theme" wm_theme 
    info "Theme" theme 
    info "Icons" icons 
    info "Terminal" term 
    info "Terminal Font" term_font 
    info "CPU" cpu 
    info "GPU" gpu 
    info "Memory" memory 
    info "GPU Driver" gpu_driver 
    info "Disk" disk 
    info "Battery" battery 
    info "Font" font 
    #tput rc
    #info_height=0
    info "Song" song 
    [[ "$player" ]] &prin "Music Player" "$player" 
    info "Local IP" local_ip 
    info "Public IP" public_ip 
    info "Users" users 
    info "Locale" locale 
    prin "info_height" "$info_height"
    info cols


}
title_fqdn="off"
kernel_shorthand="on"
distro_shorthand="off"
os_arch="on"
uptime_shorthand="on"
memory_percent="on"
memory_unit="gib"
package_managers="on"
shell_path="off"
shell_version="on"
speed_type="bios_limit"
speed_shorthand="off"
cpu_brand="on"
cpu_speed="on"
cpu_cores="logical"
cpu_temp="C"
gpu_brand="on"
gpu_type="all"
refresh_rate="on"
gtk_shorthand="off"
gtk2="on"
gtk3="on"
public_ip_host="http://ident.me"
public_ip_timeout=2
local_ip_interface=('auto')
de_version="on"
# Disk
# Which disks to display.
# The values can be any /dev/sdXX, mount point or directory.
# NOTE: By default we only show the disk info for '/'.
#
# Default: '/'
# Values:  '/', '/dev/sdXX', '/path/to/drive'.
# Flag:    --disk_show
#
# Example:
# disk_show=('/' '/dev/sdb1'):
#      'Disk (/): 74G / 118G (66%)'
#      'Disk (/mnt/Videos): 823G / 893G (93%)'
#
# disk_show=('/'):
#      'Disk (/): 74G / 118G (66%)'
#
disk_show=('/')
# Disk subtitle.
# What to append to the Disk subtitle.
#
# Default: 'mount'
# Values:  'mount', 'name', 'dir', 'none'
# Flag:    --disk_subtitle
#
# Example:
# name:   'Disk (/dev/sda1): 74G / 118G (66%)'
#         'Disk (/dev/sdb2): 74G / 118G (66%)'
#
# mount:  'Disk (/): 74G / 118G (66%)'
#         'Disk (/mnt/Local Disk): 74G / 118G (66%)'
#         'Disk (/mnt/Videos): 74G / 118G (66%)'
#
# dir:    'Disk (/): 74G / 118G (66%)'
#         'Disk (Local Disk): 74G / 118G (66%)'
#         'Disk (Videos): 74G / 118G (66%)'
#
# none:   'Disk: 74G / 118G (66%)'
#         'Disk: 74G / 118G (66%)'
#         'Disk: 74G / 118G (66%)'
disk_subtitle="mount"
# Disk percent.
# Show/Hide disk percent.
#
# Default: 'on'
# Values:  'on', 'off'
# Flag:    --disk_percent
#
# Example:
# on:  'Disk (/): 74G / 118G (66%)'
# off: 'Disk (/): 74G / 118G'
disk_percent="on"
# Song
# Manually specify a music player.
#
# Default: 'auto'
# Values:  'auto', 'player-name'
# Flag:    --music_player
#
# Available values for 'player-name':
#
# amarok
# audacious
# banshee
# bluemindo
# clementine
# cmus
# deadbeef
# deepin-music
# dragon
# elisa
# exaile
# gnome-music
# gmusicbrowser
# gogglesmm
# guayadeque
# io.elementary.music
# iTunes
# Music
# juk
# lollypop
# MellowPlayer
# mocp
# mopidy
# mpd
# muine
# netease-cloud-music
# olivia
# playerctl
# pogo
# pragha
# qmmp
# quodlibet
# rhythmbox
# sayonara
# smplayer
# spotify
# strawberry
# tauonmb
# tomahawk
# vlc
# xmms2d
# xnoise
# yarock
music_player="auto"
# Format to display song information.
#
# Default: '%artist% - %album% - %title%'
# Values:  '%artist%', '%album%', '%title%'
# Flag:    --song_format
#
# Example:
# default: 'Song: Jet - Get Born - Sgt Major'
song_format="%artist% - %album% - %title%"
# Print the Artist, Album and Title on separate lines
#
# Default: 'off'
# Values:  'on', 'off'
# Flag:    --song_shorthand
#
# Example:
# on:  'Artist: The Fratellis'
#      'Album: Costello Music'
#      'Song: Chelsea Dagger'
#
# off: 'Song: The Fratellis - Costello Music - Chelsea Dagger'
song_shorthand="off"
# 'mpc' arguments (specify a host, password etc).
#
# Default:  ''
# Example: mpc_args=(-h HOST -P PASSWORD)
mpc_args=()
# Text Colors
# Text Colors
#
# Default:  'distro'
# Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num'
# Flag:     --colors
#
# Each number represents a different part of the text in
# this order: 'title', '@', 'underline', 'subtitle', 'colon', 'info'
#
# Example:
# colors=(distro)      - Text is colored based on Distro colors.
# colors=(4 6 1 8 8 6) - Text is colored in the order above.
colors=(distro)
# Text Options
# Toggle bold text
#
# Default:  'on'
# Values:   'on', 'off'
# Flag:     --bold
bold="on"
# Enable/Disable Underline
#
# Default:  'on'
# Values:   'on', 'off'
# Flag:     --underline
underline_enabled="on"
# Underline character
#
# Default:  '-'
# Values:   'string'
# Flag:     --underline_char
underline_char="-"
# Info Separator
# Replace the default separator with the specified string.
#
# Default:  ':'
# Flag:     --separator
#
# Example:
# separator="->":   'Shell-> bash'
# separator=" =":   'WM = dwm'
separator=":"
# Color Blocks
# Color block range
# The range of colors to print.
#
# Default:  '0', '15'
# Values:   'num'
# Flag:     --block_range
#
# Example:
#
# Display colors 0-7 in the blocks.  (8 colors)
# neofetch --block_range 0 7
#
# Display colors 0-15 in the blocks. (16 colors)
# neofetch --block_range 0 15
block_range=(0 15)
# Toggle color blocks
#
# Default:  'on'
# Values:   'on', 'off'
# Flag:     --color_blocks
color_blocks="on"
# Color block width in spaces
#
# Default:  '3'
# Values:   'num'
# Flag:     --block_width
block_width=3
# Color block height in lines
#
# Default:  '1'
# Values:   'num'
# Flag:     --block_height
block_height=1
# Color Alignment
#
# Default: 'auto'
# Values: 'auto', 'num'
# Flag: --col_offset
#
# Number specifies how far from the left side of the terminal (in spaces) to
# begin printing the columns, in case you want to e.g. center them under your
# text.
# Example:
# col_offset="auto" - Default behavior of neofetch
# col_offset=7      - Leave 7 spaces then print the colors
col_offset="auto"
# Progress Bars
# Bar characters
#
# Default:  '-', '='
# Values:   'string', 'string'
# Flag:     --bar_char
#
# Example:
# neofetch --bar_char 'elapsed' 'total'
# neofetch --bar_char '-' '='
bar_char_elapsed="-"
bar_char_total="="
# Toggle Bar border
#
# Default:  'on'
# Values:   'on', 'off'
# Flag:     --bar_border
bar_border="on"
# Progress bar length in spaces
# Number of chars long to make the progress bars.
#
# Default:  '15'
# Values:   'num'
# Flag:     --bar_length
bar_length=15
# Progress bar colors
# When set to distro, uses your distro's logo colors.
#
# Default:  'distro', 'distro'
# Values:   'distro', 'num'
# Flag:     --bar_colors
#
# Example:
# neofetch --bar_colors 3 4
# neofetch --bar_colors distro 5
bar_color_elapsed="distro"
bar_color_total="distro"
# Info display
# Display a bar with the info.
#
# Default: 'off'
# Values:  'bar', 'infobar', 'barinfo', 'off'
# Flags:   --memory_display
#          --battery_display
#          --disk_display
#
# Example:
# bar:     '[---=======]'
# infobar: 'info [---=======]'
# barinfo: '[---=======] info'
# off:     'info'
memory_display="off"
battery_display="off"
disk_display="off"
# Backend Settings
# Image backend.
#
# Default:  'ascii'
# Values:   'ascii', 'caca', 'catimg', 'chafa', 'jp2a', 'iterm2', 'off',
#           'pot', 'termpix', 'pixterm', 'tycat', 'w3m', 'kitty', 'ueberzug',
#           'viu'
# Flag:     --backend
image_backend="ascii"
# Image Source
#
# Which image or ascii file to display.
#
# Default:  'auto'
# Values:   'auto', 'ascii', 'wallpaper', '/path/to/img', '/path/to/ascii', '/path/to/dir/'
#           'command output (neofetch --ascii "$(fortune | cowsay -W 30)")'
# Flag:     --source
#
# NOTE: 'auto' will pick the best image source for whatever image backend is used.
#       In ascii mode, distro ascii art will be used and in an image mode, your
#       wallpaper will be used.
image_source="auto"
# Ascii Options
# Ascii distro
# Which distro's ascii art to display.
#
# Default: 'auto'
# Values:  'auto', 'distro_name'
# Flag:    --ascii_distro
# NOTE: AIX, Hash, Alpine, AlterLinux, Amazon, Anarchy, Android, instantOS,
#       Antergos, antiX, "AOSC OS", "AOSC OS/Retro", Apricity, ArchCraft,
#       ArcoLinux, ArchBox, ARCHlabs, ArchStrike, XFerience, ArchMerge, Arch,
#       Artix, Arya, Bedrock, Bitrig, BlackArch, BLAG, BlankOn, BlueLight,
#       bonsai, BSD, BunsenLabs, Calculate, Carbs, CentOS, Chakra, ChaletOS,
#       Chapeau, Chrom*, Cleanjaro, ClearOS, Clear_Linux, Clover, Condres,
#       Container_Linux, CRUX, Cucumber, dahlia, Debian, Deepin, DesaOS,
#       Devuan, DracOS, DarkOs, Itc, DragonFly, Drauger, Elementary,
#       EndeavourOS, Endless, EuroLinux, Exherbo, Fedora, Feren, FreeBSD,
#       FreeMiNT, Frugalware, Funtoo, GalliumOS, Garuda, Gentoo, Pentoo,
#       gNewSense, GNOME, GNU, GoboLinux, Grombyang, Guix, Haiku, Huayra,
#       Hyperbola, janus, Kali, KaOS, KDE_neon, Kibojoe, Kogaion, Korora,
#       KSLinux, Kubuntu, LEDE, LaxerOS, LibreELEC, LFS, Linux_Lite, LMDE,
#       Lubuntu, Lunar, macos, Mageia, MagpieOS, Mandriva, Manjaro, Maui,
#       Mer, Minix, LinuxMint, Live_Raizo, MX_Linux, Namib, Neptune, NetBSD,
#       Netrunner, Nitrux, NixOS, Nurunner, NuTyX, OBRevenge, OpenBSD,
#       openEuler, OpenIndiana, openmamba, OpenMandriva, OpenStage, OpenWrt,
#       osmc, Oracle, OS Elbrus, PacBSD, Parabola, Pardus, Parrot, Parsix,
#       TrueOS, PCLinuxOS, Pengwin, Peppermint, popos, Porteus, PostMarketOS,
#       Proxmox, Puppy, PureOS, Qubes, Quibian, Radix, Raspbian, Reborn_OS,
#       Redstar, Redcore, Redhat, Refracted_Devuan, Regata, Regolith, Rosa,
#       sabotage, Sabayon, Sailfish, SalentOS, Scientific, Septor,
#       SereneLinux, SharkLinux, Siduction, Slackware, SliTaz, SmartOS,
#       Solus, Source_Mage, Sparky, Star, SteamOS, SunOS, openSUSE_Leap, t2,
#       openSUSE_Tumbleweed, openSUSE, SwagArch, Tails, Trisquel,
#       Ubuntu-Cinnamon, Ubuntu-Budgie, Ubuntu-GNOME, Ubuntu-MATE,
#       Ubuntu-Studio, Ubuntu, Univention, Venom, Void, semc, Obarun,
#       windows10, Windows7, Xubuntu, Zorin, and IRIX have ascii logos.
# NOTE: Arch, Ubuntu, Redhat, and Dragonfly have 'old' logo variants.
#       Use '{distro name}_old' to use the old logos.
# NOTE: Ubuntu has flavor variants.
#       Change this to Lubuntu, Kubuntu, Xubuntu, Ubuntu-GNOME,
#       Ubuntu-Studio, Ubuntu-Mate  or Ubuntu-Budgie to use the flavors.
# NOTE: Arcolinux, Dragonfly, Fedora, Alpine, Arch, Ubuntu,
#       CRUX, Debian, Gentoo, FreeBSD, Mac, NixOS, OpenBSD, android,
#       Antrix, CentOS, Cleanjaro, ElementaryOS, GUIX, Hyperbola,
#       Manjaro, MXLinux, NetBSD, Parabola, POP_OS, PureOS,
#       Slackware, SunOS, LinuxLite, OpenSUSE, Raspbian,
#       postmarketOS, and Void have a smaller logo variant.
#       Use '{distro name}_small' to use the small variants.
ascii_distro="auto"
# Ascii Colors
#
# Default:  'distro'
# Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num'
# Flag:     --ascii_colors
#
# Example:
# ascii_colors=(distro)      - Ascii is colored based on Distro colors.
# ascii_colors=(4 6 1 8 8 6) - Ascii is colored using these colors.
ascii_colors=(distro)
# Bold ascii logo
# Whether or not to bold the ascii logo.
#
# Default: 'on'
# Values:  'on', 'off'
# Flag:    --ascii_bold
ascii_bold="on"
# Image Options
# Image loop
# Setting this to on will make neofetch redraw the image constantly until
# Ctrl+C is pressed. This fixes display issues in some terminal emulators.
#
# Default:  'off'
# Values:   'on', 'off'
# Flag:     --loop
image_loop="off"
# Thumbnail directory
#
# Default: '~/.cache/thumbnails/neofetch'
# Values:  'dir'
thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"
# Crop mode
#
# Default:  'normal'
# Values:   'normal', 'fit', 'fill'
# Flag:     --crop_mode
#
# See this wiki page to learn about the fit and fill options.
# https://github.com/dylanaraps/neofetch/wiki/What-is-Waifu-Crop%3F
crop_mode="normal"
# Crop offset
# Note: Only affects 'normal' crop mode.
#
# Default:  'center'
# Values:   'northwest', 'north', 'northeast', 'west', 'center'
#           'east', 'southwest', 'south', 'southeast'
# Flag:     --crop_offset
crop_offset="center"
# Image size
# The image is half the terminal width by default.
#
# Default: 'auto'
# Values:  'auto', '00px', '00%', 'none'
# Flags:   --image_size
#          --size
image_size="auto"
# Catimg block size.
# Control the resolution of catimg.
#
# Default: '2'
# Values:  '1', '2'
# Flags:   --catimg_size
catimg_size="2"
# Gap between image and text
#
# Default: '3'
# Values:  'num', '-num'
# Flag:    --gap
gap=3
# Image offsets
# Only works with the w3m backend.
#
# Default: '0'
# Values:  'px'
# Flags:   --xoffset
#          --yoffset
yoffset=0
xoffset=0
# Image background color
# Only works with the w3m backend.
#
# Default: ''
# Values:  'color', 'blue'
# Flag:    --bg_color
background_color=
# Misc Options
# Stdout mode
# Turn off all colors and disables image backend (ASCII/Image).
# Useful for piping into another command.
# Default: 'off'
# Values: 'on', 'off'
stdout="off"
